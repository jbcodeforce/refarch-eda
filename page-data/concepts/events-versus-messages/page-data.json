{"componentChunkName":"component---src-pages-concepts-events-versus-messages-index-mdx","path":"/concepts/events-versus-messages/","result":{"pageContext":{"frontmatter":{"title":"Events versus Messages","description":"Comparing and contrasting events and messages as communication artifacts in distributed systems."},"relativePagePath":"/concepts/events-versus-messages/index.mdx","titleType":"append","MdxNode":{"id":"b7aa8334-6046-5517-9dd5-bbbad659f334","children":[],"parent":"88acad4c-b6e1-569f-86a2-2a744bfa102c","internal":{"content":"---\ntitle: Events versus Messages\ndescription: Comparing and contrasting events and messages as communication artifacts in distributed systems.\n---\n\n## Events and Messages\n\nThere is a long history of *messaging* in IT systems.  You can easily see an event driven solution and events in the context of messaging systems and messages. However, there are different characteristics that are worth considering:\n\n* **Messaging:** Messages transport a payload and messages are persisted until consumed. Message consumers are typically directly targeted and related to the producer who cares that the message has been delivered and processed.\n* **Events:** Events are persisted as a replayable stream history. Event consumers are not tied to the producer. An event is a record of something that has happened and so can't be changed. (You can't change history.)\n\n![](./images/evt-msg.png)\n\n## Messaging versus event streaming\n\nWe recommend reading [this article](https://developer.ibm.com/messaging/2018/05/18/comparing-messaging-event-streaming-use-cases/) and [this one](https://developer.ibm.com/messaging/2019/02/05/comparing-messaging-pub-sub-and-event-streams/), to get insight on messaging (focusing on operations / actions to be performed by a system or service) versus events (focusing on the state / facts of a system with no knowledge of the downstream processing).\n\nTo summarize messaging (like MQ) are to support:\n\n* **Transient Data:** data is only stored until a consumer has processed the message, or it expires.\n* **Request / reply** most of the time.\n* **Targeted reliable delivery:** targeted to the entity that will process the request or receive the response. Reliable with transaction support.\n* **Highly Coupled** producers and consumers\n\nFor events:\n\n* **Stream History:** consumers are interested in historic events, not just the most recent.\n* **Scalable Consumption:** A single event is consumed by many consumers with limited impact as the number of consumers grow.\n* **Immutable Data**\n* **Loosely coupled / decoupled** producers and consumers\n","type":"Mdx","contentDigest":"e83f2579951367fd9ea1700836967bf4","counter":574,"owner":"gatsby-plugin-mdx"},"exports":[],"rawBody":"---\ntitle: Events versus Messages\ndescription: Comparing and contrasting events and messages as communication artifacts in distributed systems.\n---\n\n## Events and Messages\n\nThere is a long history of *messaging* in IT systems.  You can easily see an event driven solution and events in the context of messaging systems and messages. However, there are different characteristics that are worth considering:\n\n* **Messaging:** Messages transport a payload and messages are persisted until consumed. Message consumers are typically directly targeted and related to the producer who cares that the message has been delivered and processed.\n* **Events:** Events are persisted as a replayable stream history. Event consumers are not tied to the producer. An event is a record of something that has happened and so can't be changed. (You can't change history.)\n\n![](./images/evt-msg.png)\n\n## Messaging versus event streaming\n\nWe recommend reading [this article](https://developer.ibm.com/messaging/2018/05/18/comparing-messaging-event-streaming-use-cases/) and [this one](https://developer.ibm.com/messaging/2019/02/05/comparing-messaging-pub-sub-and-event-streams/), to get insight on messaging (focusing on operations / actions to be performed by a system or service) versus events (focusing on the state / facts of a system with no knowledge of the downstream processing).\n\nTo summarize messaging (like MQ) are to support:\n\n* **Transient Data:** data is only stored until a consumer has processed the message, or it expires.\n* **Request / reply** most of the time.\n* **Targeted reliable delivery:** targeted to the entity that will process the request or receive the response. Reliable with transaction support.\n* **Highly Coupled** producers and consumers\n\nFor events:\n\n* **Stream History:** consumers are interested in historic events, not just the most recent.\n* **Scalable Consumption:** A single event is consumed by many consumers with limited impact as the number of consumers grow.\n* **Immutable Data**\n* **Loosely coupled / decoupled** producers and consumers\n","frontmatter":{"title":"Events versus Messages","description":"Comparing and contrasting events and messages as communication artifacts in distributed systems."},"fileAbsolutePath":"/Users/jeromeboyer/Code/EDA/refarch-eda/docs/src/pages/concepts/events-versus-messages/index.mdx"}}},"staticQueryHashes":["1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","63531786","63531786","768070550"]}