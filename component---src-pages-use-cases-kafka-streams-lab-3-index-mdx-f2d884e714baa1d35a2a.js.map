{"version":3,"sources":["webpack:///./src/pages/use-cases/kafka-streams/lab-3/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","AnchorLinks","AnchorLink","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"0PAMaA,G,UAAe,IAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,cAAgBH,EAAO,4EAC7B,kBAASC,KAGZG,EAAcL,EAAc,eAC5BM,EAAaN,EAAc,cAC3BO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAaO,QAAQ,eACrB,YAACN,EAAD,CAAYM,QAAQ,cAApB,YACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,0BACA,YAACN,EAAD,CAAYM,QAAQ,cAApB,4BAEA,kCACA,sBACE,kBAAIC,WAAW,MAAf,2CAAgE,6BAAGA,WAAW,MAAS,CACnF,KAAQ,uBADoD,WAAhE,gGAGA,kBAAIA,WAAW,MAAf,4BAAiD,6BAAGA,WAAW,MAAS,CACpE,KAAQ,oDADqC,wBAAjD,yDAIF,yDACA,sBACE,kBAAIA,WAAW,MAAf,6FACA,kBAAIA,WAAW,MAAf,uDACA,kBAAIA,WAAW,MAAf,yCACA,kBAAIA,WAAW,MAAf,qDACA,kBAAIA,WAAW,MAAf,wDAEF,gDACA,qBAAG,sBAAQA,WAAW,KAAnB,SACH,sBACE,kBAAIA,WAAW,MAAf,qDAEF,qBAAG,sBAAQA,WAAW,KAAnB,UACH,sBACE,kBAAIA,WAAW,MAAf,+GAGF,qBAAG,sBAAQA,WAAW,KAAnB,0BACH,sBACE,kBAAIA,WAAW,MAAf,sEAEF,qBAAG,sBAAQA,WAAW,KAAnB,iCACH,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,eAEL,qBAAG,sBAAQA,WAAW,KAAnB,kCACH,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,mBAEL,qBAAG,sBAAQA,WAAW,KAAnB,sBACH,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,0OAGL,qBAAG,sBAAQA,WAAW,KAAnB,eAAH,yCAA4F,0BAAYA,WAAW,KAAvB,mFAC5F,iDACA,4DACA,sBACE,kBAAIA,WAAW,MAAf,+EAEF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,wTAOL,0EACA,sBACE,kBAAIA,WAAW,MAAf,qEAA0F,0BAAYA,WAAW,MAAvB,sDAC1F,kBAAIA,WAAW,MAAf,2FAAgH,0BAAYA,WAAW,MAAvB,WAAhH,gDACgC,0BAAYA,WAAW,MAAvB,WADhC,4BAGF,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yLASL,4CACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,mBADZ,yBAIL,oDACA,kCAAiB,0BAAYA,WAAW,KAAvB,2BAAjB,gFACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,6SAeL,8EAA6D,0BAAYA,WAAW,KAAvB,SAA7D,wFACA,yFACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gKAYTH,EAAWI,gBAAiB","file":"component---src-pages-use-cases-kafka-streams-lab-3-index-mdx-f2d884e714baa1d35a2a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/jeromeboyer/Code/EDA/refarch-eda/docs/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component '\" + name + \"' was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <AnchorLinks mdxType=\"AnchorLinks\">\n    <AnchorLink mdxType=\"AnchorLink\">Overview</AnchorLink>\n    <AnchorLink mdxType=\"AnchorLink\">Scenario Prerequisites</AnchorLink>\n    <AnchorLink mdxType=\"AnchorLink\">Develop the application</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Overview`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`In this lab scenario weâ€™re going to use `}<a parentName=\"li\" {...{\n          \"href\": \"https://quarkus.io\"\n        }}>{`Quarkus`}</a>{` to develop the core application with Kafka streams api and microprofile reactive messaging.`}</li>\n      <li parentName=\"ul\">{`We will be testing using `}<a parentName=\"li\" {...{\n          \"href\": \"https://kafka.apache.org/documentation/streams/\"\n        }}>{`Apache Kafka Streams`}</a>{` TestDriver to mimic a Topology, a Stream and Table.`}</li>\n    </ul>\n    <p>{`The requirements to address are:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`consume item sold from items topic, item has unique key. Item event has store information`}</li>\n      <li parentName=\"ul\">{`compute for each item its current stock cross store`}</li>\n      <li parentName=\"ul\">{`compute the store stock for each item`}</li>\n      <li parentName=\"ul\">{`generate inventory event for store - item - stock`}</li>\n      <li parentName=\"ul\">{`expose APIs to get stock for a store or for an item`}</li>\n    </ul>\n    <h2>{`Scenario Prerequisites`}</h2>\n    <p><strong parentName=\"p\">{`Java`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`For the purposes of this lab we suggest Java 11+`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Maven`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Maven will be needed for bootstrapping our application from the command-line and running\nour application.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`An IDE of your choice`}</strong></p>\n    <ul>\n      <li parentName=\"ul\">{`Ideally an IDE that supports Quarkus (such as Visual Studio Code)`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`OpenShift Container Platform`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`- v4.4.x\n`}</code></pre>\n    <p><strong parentName=\"p\">{`IBM Cloud Pak for Integration`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`- CP4I2020.2\n`}</code></pre>\n    <p><strong parentName=\"p\">{`IBM Event Streams`}</strong></p>\n    <pre><code parentName=\"pre\" {...{}}>{`- The section on use with Event Streams on CP4I assumes Event Streams v10. IF using a previous version such as ESv2019.4.2\nthere are some differences to how you would configure \\`application.properties\\` to establish a connectio\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Code Source`}</strong>{`: clone the following git repository: `}<inlineCode parentName=\"p\">{`git clone https://github.com/ibm-cloud-architecture/refarch-eda-item-inventory`}</inlineCode></p>\n    <h2>{`Develop the application`}</h2>\n    <h3>{`Setting up the Quarkus Application`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`We will bootstrap the Quarkus application with the following Maven command`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`mvn io.quarkus:quarkus-maven-plugin:1.7.2.Final:create \\\\\n    -DprojectGroupId={com.ibm} \\\\\n    -DprojectArtifactId={quarkus-kstreams-lab} \\\\\n    -Dextensions=\"kafka,kafka-streams,resteasy-jsonb,smallrye-health,smallrye-reactive-messaging-kafka,quarkus-smallrye-openapi,quarkus-kafka-streams,openshift\"\n`}</code></pre>\n    <p>{`You can replace the fields within {} as you like.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`recall that is if you want to add an extension do something like: `}<inlineCode parentName=\"li\">{`./mvnw Quarkus:add-extension -Dextensions=\"kafka\"`}</inlineCode></li>\n      <li parentName=\"ul\">{`Since we will be using the Kafka Streams testing functionality we will need to edit the `}<inlineCode parentName=\"li\">{`pom.xml`}</inlineCode>{` to add\nthe dependency to our project. Open `}<inlineCode parentName=\"li\">{`pom.xml`}</inlineCode>{` and add the following.`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<dependency>\n    <groupId>org.apache.kafka</groupId>\n    <artifactId>kafka-streams-test-utils</artifactId>\n    <version>2.5.0</version>\n    <scope>test</scope>\n</dependency>\n`}</code></pre>\n    <h3>{`Start the dev mode`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-shell\"\n      }}>{`./mvnw quarkus:dev\n`}</code></pre>\n    <h2>{`Define the domain entities`}</h2>\n    <p>{`Under the `}<inlineCode parentName=\"p\">{`src/main/java/../domain`}</inlineCode>{` folder add the two classes representing the business entities we are using:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Java\"\n      }}>{`public class Item {\n    public static String RESTOCK = \"RESTOCK\";\n    public static String SALE = \"SALE\";\n    public String storeName;\n    public String sku;\n    public int quantity;\n    public String type;\n    public Double price;\n    public String timestamp;\n\n    public Item(){}\n}\n`}</code></pre>\n    <p>{`This item will also being used for event structure on `}<inlineCode parentName=\"p\">{`items`}</inlineCode>{` topic. The type attribute is to specify if this is a sale event or a restock event.`}</p>\n    <p>{`The inventory per store includes a map of item.sku and quantity.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-Java\"\n      }}>{`public class Inventory {\n    public String storeName;\n    public HashMap<String,Long> stock = new HashMap<String,Long>();\n    public Inventory(){}\n}\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}